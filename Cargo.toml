[package]
name = "falion"
authors = ["Obscurely <adrian.obscurely@protonmail.com"]
version = "1.0.0"
edition = "2021"
rust-version = "1.72.1"                                                     # Minimum rust version
resolver = "2"
description = "CHANGEME_DESC"
documentation = "https://github.com/Obscurely/falion/blob/master/README.md"
repository = "https://github.com/Obscurely/falion"
homepage = "https://github.com/Obscurely/falion"
categories = []                                                             # CHANGEME_MANUAL
keywords = []                                                               # CHANGEME_MANUAL
readme = "README.md"
license = "MIT"
build = "build.rs"

#═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

[package.metadata.deb]
maintainer = "Obscurely <adrian.obscurely@protonmail.com>"
copyright = "2023, 2023 <adrian.obscurely@protonmail.com>"
license-file = ["LICENSE", "0"]
extended-description = """\
CHANGEME_DESC""""
depends = "$auto"
section = "CHANGEME_MANUAL"

#═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

[profile.release]
strip = true      # Automatically strip symbols from the binary.
opt-level = 3     # Optimize for speed.
lto = true        # instructs the linker to optimize at the link stage.
codegen-units = 1 # Default is 16, the higher the faster compile time, but it may produce slower code.
panic = "unwind"

#═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

[build-dependencies]
slint-build = "1.2.0"

#═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

[target.'cfg(windows)'.build-dependencies]
embed-resource = "2.3.0"

#═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

[dependencies]
chrono = { version = "0.4.28", default-features = false, features = ["clock"] }
clap = { version = "4.4.2", features = ["derive"] }
crossterm = "0.27.0"
dashmap = "5.5.3"
dirs = "5.0.1"
futures = "0.3.28"
hashbrown = "0.14.0"
html2text = "0.6.0"
rand = "0.8.5"
rayon = "1.7.0"
reqwest = { version = "0.11.20", features = [
  "json",
  "gzip",
  "brotli",
  "deflate",
] }
slint = "1.2.0"
thiserror = "1.0.48"
tokio = { version = "1.32.0", features = ["full"] }
tracing = "0.1.37"
tracing-subscriber = "0.3.17"
url = "2.4.1"
urlencoding = "2.1.3"

[target.'cfg(windows)'.dependencies]
winapi = { version = "0.3.9", features = ["winbase", "processthreadsapi", "winuser"] }

# Great examples include:
#   - rand (togheter with rand_hc for cryptography)
#   - serde and serde_json
#   - reqwest
#   - tokio
#   - regex
#   - clap (fully-featured args parsing), pico-args (minimal args parsing)
#   - chrono (date and time)
#   - tempfile
#   - dirs
#   - indexmap
#   - thiserror and anyerror (for error handling)
#   - tracing (logging)
#   - walkdir (recursively read a directory)
#   - rayon (using .par_iter() it makes iters run in parallel)
#   - slint (ui framework)
#   - sled (high performance, written in rust, db)
#   - itertools (for when extra iterator methods are needed)
